AWS_ACCESS_KEY_ID=<REPLACE_WITH_AWS_ACCESS_KEY_ID>
AWS_SECRET_ACCESS_KEY=<REPLACE_WITH_AWS_SECRET_KEY>

TF_USER_TOKEN=<REPLACE_WITH_TERRAFORM_USER_TOKEN>


WORKSPACE_ID=<TERRAFORM_CLOUD_WORKSPACE_ID>
WORKSPACE_NAME=<REPLACE_WITH_WORKSPACE_NAME>

PRISMA_ACCESS_KEY=<REPLACE_WITH_PRISMA_ACCESS_KEY>
PRISMA_SECRET_KEY=<REPLACE_WITH_PRISMA_SECRET_KEY>

# sentinel.hcl file should look like this: 

policy "prismacloud" {
        source            = "./prismacloud.sentinel"
        enforcement_level = "hard-mandatory"
}


# prismacloud.sentinel file should look similar to below code block. REPLACE <CODE_SECURITY_APPSTACK> with api2, api3....etc. Replace <TERRAFORM_CLOUD_WORKSPACE_ID> with the actual workspace ID. 

import "http"
import "json" 

param PRISMA_ACCESS_KEY
param PRISMA_SECRET_KEY

loginReq = http.request("https://<CODE_SECURITY_APP_STACK>.prismacloud.io/login").with_body(json.marshal({"username": PRISMA_ACCESS_KEY, "password": PRISMA_SECRET_KEY})).with_header("Content-Type", "application/json")
loginResp = json.unmarshal(http.post(loginReq).body)
req = http.request("https://<CODE_SECURITY_APP_STACK>.prismacloud.io/bridgecrew/api/v1/tfCloud/sentinel/<TERRAFORM_CLOUD_WORKSPACE_ID>").with_header("Authorization", loginResp.token)
resp = json.unmarshal(http.get(req).body)
if (length(resp.violations) > 0) {
    print("Violations:\n")
    for resp.violations as violation {
        print(violation.title)
        print("Resource: " + violation.resource_id)
        print("Violation ID: " + violation.violation_id)
        print("\n")
    }
}
print("More details: " + resp.details_url)  
main = rule { length(resp.violations) < 1 }
